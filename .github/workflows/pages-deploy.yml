name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - '.github/workflows/pages-deploy.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'docs/**'
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Cloudflare Pages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install -g wrangler
      
      - name: Deploy to Cloudflare Pages
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          echo "üöÄ Deploying to Cloudflare Pages..."
          
          # Deploy to Pages
          wrangler pages deploy docs \
            --project-name=quiver-network-v2 \
            --branch=${{ github.ref_name }} \
            --commit-hash=${{ github.sha }} \
            --commit-message="${{ github.event.head_commit.message }}"
          
          echo "‚úÖ Deployment complete!"
      
      - name: Verify deployment
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          echo "üîç Verifying deployment..."
          
          # Wait for deployment to propagate
          sleep 30
          
          # Test main domain
          response=$(curl -s -o /dev/null -w "%{http_code}" https://quiver.network/)
          echo "https://quiver.network/ - HTTP $response"
          
          # Test subdomains
          for subdomain in www api docs explorer dashboard; do
            response=$(curl -s -o /dev/null -w "%{http_code}" https://$subdomain.quiver.network/)
            echo "https://$subdomain.quiver.network/ - HTTP $response"
          done
          
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const deployment_url = 'https://quiver.network/';
            const preview_url = `https://pr-${{ github.event.pull_request.number }}.quiver-network-v2.pages.dev/`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### üöÄ Cloudflare Pages Deployment
              
              **Preview URL**: ${preview_url}
              **Production URL**: ${deployment_url}
              
              | Subdomain | Status |
              |-----------|---------|
              | [Root](https://quiver.network/) | üîÑ |
              | [API](https://api.quiver.network/) | üîÑ |
              | [Docs](https://docs.quiver.network/) | üîÑ |
              | [Explorer](https://explorer.quiver.network/) | üîÑ |
              | [Dashboard](https://dashboard.quiver.network/) | üîÑ |
              
              *Status will update after DNS propagation (5-10 minutes)*`
            })